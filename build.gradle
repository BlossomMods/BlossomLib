plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url "https://maven.nucleoid.xyz" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}+${project.minecraft_version}"
    modImplementation "me.lucko:fabric-permissions-api:${project.fpa_version}"

    modImplementation(include("fr.catcore:server-translations-api:${project.server_translations_version}"))
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand(
                "version": project.version,
                "supported_versions": project.supported_mc_versions,
                "mod_id": project.mod_id,
                "mod_name": project.mod_name,
        )
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    archivesBaseName = project.mod_id

    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.mod_id}" }
    }
}

publishing {
    publications {
        gpr(MavenPublication) {
            artifactId = project.mod_id
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/BlossomMods/${project.mod_name}")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
    }
}

modrinth {
    projectId = "${project.mod_name}"
    versionType = "release"
    uploadFile = remapJar
    changelog = System.getenv("CHANGELOG_PATH") ? rootProject.file(System.getenv("CHANGELOG_PATH")).text : ""
    gameVersions = ((String) project.minecraft_version).split("\\|").toList()
    loaders = ["fabric", "quilt"]
    syncBodyFrom = rootProject.file("README.md").text
}

tasks.modrinth.dependsOn tasks.modrinthSyncBody
tasks.publish.dependsOn tasks.modrinth
